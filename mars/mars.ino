#include<Arduino.h>
#include<U8g2lib.h>

#ifdef U8X8_HAVE_HW_SPI
#include<SPI.h>
#endif
#ifdef U8X8_HAVE_HW_I2C
#include<Wire.h>
#endif

U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);

/**
 * Pin locations
 */ 

#define LED 4
#define BUZZER 5

/**
 * State variables
 */

int x = 8; // perseverance initial x-value
int y = -55; // perseverance initial y-value

/**
 * Contents of .xbm files (image data)
 * image credits to https://solarsystem.nasa.gov/news/1573/color-your-universe/
 */ 

#define big_mars_width 64
#define big_mars_height 64
static const unsigned char big_mars_bits[] PROGMEM = {
  0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
  0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xff, 0xff, 0x0f, 0x00, 0x00,
  0x00, 0x00, 0xfc, 0x01, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00,
  0x80, 0xff, 0x00, 0x00, 0x00, 0x80, 0x0f, 0x00, 0xfc, 0xe0, 0x01, 0x00,
  0x00, 0xe0, 0x03, 0x0c, 0x07, 0xe0, 0x07, 0x00, 0x00, 0xf0, 0x9f, 0xc7,
  0x81, 0x3f, 0x0f, 0x00, 0x00, 0x78, 0xf0, 0x61, 0xf0, 0x0f, 0x1c, 0x00,
  0x00, 0x1c, 0x00, 0x38, 0x7c, 0x00, 0x38, 0x00, 0x00, 0x0e, 0x00, 0x0e,
  0x07, 0x00, 0x78, 0x00, 0x00, 0x07, 0x00, 0xc3, 0x01, 0x00, 0xf8, 0x00,
  0x80, 0xc3, 0x01, 0x70, 0x00, 0x00, 0xcc, 0x01, 0xc0, 0xf1, 0x07, 0x1e,
  0x00, 0x00, 0xc6, 0x03, 0xc0, 0x3d, 0x84, 0x07, 0x00, 0x00, 0xc3, 0x07,
  0xe0, 0x0f, 0xfc, 0x01, 0x00, 0x80, 0x41, 0x07, 0xf0, 0x03, 0x3c, 0x00,
  0x00, 0xc0, 0x60, 0x0e, 0xf0, 0x81, 0x03, 0x00, 0x00, 0x60, 0x30, 0x0c,
  0x78, 0x60, 0x00, 0x00, 0x00, 0x70, 0x30, 0x1c, 0x38, 0x18, 0x00, 0x00,
  0x00, 0x30, 0x18, 0x18, 0x18, 0x06, 0x00, 0x00, 0x00, 0x18, 0x0c, 0x38,
  0x1c, 0x03, 0x00, 0x00, 0x00, 0x0c, 0x06, 0x38, 0x8c, 0x01, 0x00, 0x00,
  0x00, 0x0e, 0x02, 0x30, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x06, 0x02, 0x70,
  0x4e, 0x00, 0x00, 0x00, 0x80, 0x03, 0x02, 0x70, 0x6e, 0x00, 0x00, 0x3e,
  0xc0, 0x01, 0x02, 0x60, 0x36, 0x00, 0x00, 0xc3, 0xff, 0x00, 0x06, 0x60,
  0x36, 0x00, 0x00, 0x03, 0x1f, 0x00, 0x04, 0x60, 0x1e, 0x00, 0x00, 0x03,
  0x00, 0x00, 0x08, 0xe0, 0x1e, 0x1c, 0x00, 0x03, 0x00, 0x00, 0x30, 0xe0,
  0x0f, 0x1c, 0x00, 0x06, 0x00, 0x00, 0x60, 0xe0, 0x0f, 0x3c, 0x00, 0x06,
  0x00, 0x00, 0x80, 0xe1, 0x0f, 0x34, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xee,
  0x0f, 0x64, 0x00, 0x18, 0x00, 0x00, 0x00, 0xf8, 0x0e, 0x44, 0x00, 0x38,
  0x00, 0x00, 0x00, 0xe0, 0x06, 0xc6, 0x00, 0x60, 0x00, 0x00, 0x00, 0xe0,
  0x06, 0x83, 0xf0, 0xc0, 0xff, 0x7f, 0x00, 0x67, 0x86, 0x00, 0xff, 0x01,
  0x1f, 0xc0, 0xff, 0x7f, 0x4e, 0x00, 0xf8, 0x03, 0x00, 0x00, 0x00, 0x78,
  0x2e, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x70, 0x3c, 0x00, 0x00, 0x06,
  0x00, 0x00, 0x00, 0x71, 0x1c, 0x00, 0x00, 0x0c, 0x00, 0xf0, 0x03, 0x33,
  0x1c, 0x00, 0x00, 0x18, 0x38, 0x18, 0x8e, 0x3f, 0x18, 0x00, 0x00, 0x38,
  0xfe, 0x08, 0x58, 0x3c, 0x38, 0x00, 0x00, 0x30, 0x06, 0x0f, 0x70, 0x1c,
  0x38, 0x00, 0x00, 0xe0, 0x03, 0x0e, 0x20, 0x1c, 0x70, 0x00, 0x00, 0xc0,
  0x03, 0x00, 0x00, 0x0c, 0xf0, 0x7f, 0x00, 0x00, 0x02, 0x00, 0x00, 0x0e,
  0xe0, 0xe1, 0x03, 0x00, 0x00, 0x00, 0xfc, 0x07, 0xc0, 0x01, 0x0f, 0x00,
  0x00, 0xc0, 0x9f, 0x03, 0xc0, 0x01, 0xf8, 0xfc, 0x0f, 0xfe, 0x81, 0x03,
  0x80, 0x03, 0xe0, 0xff, 0xff, 0x0f, 0xc0, 0x01, 0x00, 0x07, 0x00, 0x00,
  0x00, 0x00, 0xe0, 0x00, 0x00, 0xfe, 0xff, 0x07, 0x00, 0x00, 0x70, 0x00,
  0x00, 0xfc, 0xff, 0xff, 0x0f, 0x00, 0x38, 0x00, 0x00, 0x78, 0x00, 0x00,
  0xff, 0x00, 0x1c, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xc0, 0x03, 0x0f, 0x00,
  0x00, 0xe0, 0x03, 0x00, 0x00, 0xc6, 0x07, 0x00, 0x00, 0x80, 0x0f, 0x00,
  0x00, 0xe4, 0x01, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0xfc, 0x00, 0x00,
  0x00, 0x00, 0xfc, 0x01, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xff,
  0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x00
};

#define small_mars_width 64
#define small_mars_height 64
static const unsigned char small_mars_bits[] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xdf, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x53, 0xd5, 0x07, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00,
  0x80, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x80, 0x75, 0x00, 0x00,
  0x00, 0x00, 0x07, 0x00, 0x54, 0xe0, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x04,
  0x02, 0xa0, 0x03, 0x00, 0x00, 0xe0, 0x1a, 0x45, 0x81, 0x0f, 0x06, 0x00,
  0x00, 0x30, 0xa0, 0x20, 0x70, 0x02, 0x0c, 0x00, 0x00, 0x18, 0x00, 0x08,
  0x14, 0x00, 0x18, 0x00, 0x00, 0x0c, 0x00, 0x04, 0x01, 0x00, 0x38, 0x00,
  0x00, 0x06, 0x00, 0x42, 0x01, 0x00, 0x64, 0x00, 0x00, 0x83, 0x01, 0x30,
  0x00, 0x00, 0xc4, 0x00, 0x80, 0x61, 0x02, 0x06, 0x00, 0x00, 0xc2, 0x01,
  0x80, 0x1b, 0x84, 0x03, 0x00, 0x80, 0x80, 0x03, 0xc0, 0x07, 0x38, 0x00,
  0x00, 0x80, 0x20, 0x03, 0xe0, 0x03, 0x00, 0x00, 0x00, 0x20, 0x10, 0x06,
  0xe0, 0x00, 0x01, 0x00, 0x00, 0x20, 0x10, 0x04, 0x70, 0x10, 0x00, 0x00,
  0x00, 0x10, 0x08, 0x0c, 0x10, 0x00, 0x00, 0x00, 0x00, 0x08, 0x04, 0x08,
  0x30, 0x04, 0x00, 0x00, 0x00, 0x08, 0x02, 0x1c, 0x18, 0x01, 0x00, 0x00,
  0x00, 0x04, 0x00, 0x18, 0x08, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x10,
  0x98, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x38, 0x5c, 0x00, 0x00, 0x14,
  0xc0, 0x01, 0x00, 0x20, 0x44, 0x00, 0x00, 0x82, 0x6a, 0x00, 0x02, 0x30,
  0x2c, 0x00, 0x00, 0x02, 0x0f, 0x00, 0x00, 0x20, 0x2c, 0x00, 0x00, 0x03,
  0x00, 0x00, 0x00, 0x30, 0x1c, 0x10, 0x00, 0x02, 0x00, 0x00, 0x10, 0x70,
  0x1e, 0x18, 0x00, 0x02, 0x00, 0x00, 0x20, 0x60, 0x0e, 0x38, 0x00, 0x04,
  0x00, 0x00, 0x80, 0x70, 0x1e, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x72,
  0x1e, 0x40, 0x00, 0x18, 0x00, 0x00, 0x00, 0x74, 0x0c, 0x08, 0x00, 0x10,
  0x00, 0x00, 0x00, 0x70, 0x08, 0x84, 0x00, 0x40, 0x00, 0x00, 0x00, 0x60,
  0x04, 0x00, 0xe0, 0x80, 0x5f, 0x15, 0x00, 0x33, 0x0c, 0x01, 0xfa, 0x01,
  0x08, 0x40, 0x55, 0x3d, 0x0c, 0x00, 0xa0, 0x03, 0x00, 0x00, 0x00, 0x38,
  0x58, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x30, 0x38, 0x00, 0x00, 0x04,
  0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x08, 0x00, 0x30, 0x81, 0x11,
  0x30, 0x00, 0x00, 0x10, 0x38, 0x08, 0x04, 0x1e, 0x30, 0x00, 0x00, 0x30,
  0x06, 0x00, 0x28, 0x0c, 0x30, 0x00, 0x00, 0x20, 0x02, 0x07, 0x10, 0x0e,
  0x60, 0x00, 0x00, 0xc0, 0x03, 0x02, 0x00, 0x04, 0xe0, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x06, 0xc0, 0xe7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x80, 0x01, 0x02, 0x00, 0x00, 0x00, 0xee, 0x01, 0x80, 0x01, 0x12, 0x00,
  0x00, 0xe0, 0x80, 0x01, 0x00, 0x03, 0xe0, 0xfe, 0x0f, 0x0f, 0xc0, 0x00,
  0x00, 0x06, 0x00, 0x00, 0x10, 0x00, 0x60, 0x00, 0x00, 0x8c, 0x90, 0x04,
  0x00, 0x00, 0x30, 0x00, 0x00, 0xf8, 0xff, 0x4f, 0x02, 0x00, 0x18, 0x00,
  0x00, 0x70, 0x00, 0x00, 0x2f, 0x00, 0x0c, 0x00, 0x00, 0xe0, 0x00, 0x00,
  0xc0, 0x00, 0x06, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x82, 0x03, 0x00,
  0x00, 0x00, 0x0b, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00,
  0x00, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x78, 0x01, 0x80, 0x1e, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0xd5, 0xea, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe,
  0xdf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

#define perseverance_width 128
#define perseverance_height 64
static const unsigned char perseverance_bits[] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xf8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x0e, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x08,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x40, 0x80, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x89, 0x10,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x40, 0x80, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x07,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x80, 0xaa, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x05, 0x02, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x8c, 0x02,
  0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x28, 0x00, 0x38, 0x01, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x20, 0x01, 0x80, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x4f, 0x00, 0x20, 0x01,
  0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
  0x40, 0x00, 0x20, 0xa1, 0xf6, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x40, 0x45, 0x00, 0x20, 0xb1, 0x54, 0x07, 0x01, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x40, 0x00, 0x20, 0x2a,
  0xc9, 0x5a, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50,
  0x45, 0x00, 0x20, 0x06, 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x10, 0x40, 0x00, 0x6a, 0x5f, 0xf5, 0x36, 0x04, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x75, 0x70, 0x01, 0x00,
  0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x10, 0x00, 0x04, 0xb4, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x10, 0x00, 0x08, 0x2a, 0x02, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xb0, 0x01, 0x4a,
  0x88, 0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x08, 0x00, 0x15, 0x01, 0xd4, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x08, 0x02, 0x60, 0x00, 0xf0, 0x0f, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xd8, 0x80, 0x0f,
  0x00, 0xb4, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x48, 0x00, 0x08, 0x80, 0x45, 0x1b, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x24, 0x00, 0x2b, 0x68, 0x01, 0x17, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x32, 0xa9, 0x80,
  0x22, 0xfe, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x1b, 0xd8, 0x84, 0x03, 0x44, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x4c, 0x90, 0x90, 0x92, 0xc4, 0x84, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x4a, 0x12, 0x80,
  0x52, 0x44, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xab, 0x09, 0x51, 0x32, 0x03, 0x45, 0xa2, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x9e, 0x48, 0x92, 0x80, 0x12, 0x44, 0x82, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x61, 0x08, 0x90, 0x84,
  0x04, 0x82, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
  0x21, 0x90, 0x08, 0x69, 0x68, 0x81, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x23, 0xb0, 0x05, 0x0a, 0xa0, 0x80, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x02, 0x00,
  0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};

void drawLongText(const char* line1 = "", const char* line2 = "", const char* line3 = "", int ms = 4500) {
  // show up to three lines of text on the screen
  u8g2.clearBuffer();
  u8g2.drawStr(0, 15, line1);
  u8g2.drawStr(0, 35, line2); 
  u8g2.drawStr(0, 55, line3);
  u8g2.sendBuffer();
  delay(ms); // show for 5 sec by default
  u8g2.clearDisplay();
}

void drawShortText(const char* text = "", int x = 55, int ms = 2000) {
  // show one line of text on the screen
  u8g2.clearBuffer();
  u8g2.drawStr(x, 35, text);
  u8g2.sendBuffer();
  delay(ms); // show for 2 sec by default
  u8g2.clearDisplay();
}

void playMarsAnimation() {

  for (uint8_t i = 0; i < 3; i++) {

    // draw small mars
    u8g2.clearBuffer();
    u8g2.drawXBMP(30, 0, small_mars_width, small_mars_height, small_mars_bits);
    u8g2.sendBuffer();
    delay(50);

    // draw big mars
    u8g2.clearBuffer();
    u8g2.drawXBMP(30, 0, big_mars_width, big_mars_height, big_mars_bits);
    u8g2.sendBuffer();
    delay(1000);
  }
  delay(500);
}

void playPerseveranceSequence() {

  // buzz and flash sequence
  for (uint8_t i = 0; i < 3; i++) {
    analogWrite(BUZZER, HIGH);
    digitalWrite(LED, HIGH);
    drawShortText("ALERT", 45, 500);
    delay(250);
    analogWrite(BUZZER, LOW);
    digitalWrite(LED, LOW);
    drawShortText("ALERT", 45, 500);
    delay(250);
  }

  // landing animation
  while (y < 15) {
    u8g2.clearBuffer();
    u8g2.drawXBMP(x, y, perseverance_width, perseverance_height, perseverance_bits);
    u8g2.sendBuffer();
    delay(350);
    y += 10;
    Serial.println(y);
  }
  y -= 10;
  delay(1000);
}

void drawPerseverance() {
  u8g2.drawXBMP(x, y, perseverance_width, perseverance_height, perseverance_bits);
}

void tellLore() {
  drawLongText("ONCE UPON A TIME", "ON MARS...");
  playMarsAnimation(); // show mars!
  drawLongText("...A CURIOUS", "CREATURE FALLS", "FROM THE SKY.");
  playPerseveranceSequence(); // perseverance landing 
  drawLongText("YOU ARE THE", "PERSEVERANCE", "ROVER.");
  drawLongText("PRESS BUTTON TO", "VIEW CONTROLS");
}

void setup() {
  u8g2.begin();
  Serial.begin(9600);
  u8g2.setFlipMode(true); // flip screen orientation 180 degrees
  u8g2.setFont(u8g2_font_DigitalDisco_tu);
  pinMode(LED, OUTPUT);
  pinMode(BUZZER, OUTPUT);
  tellLore();
}


void loop() {
  // picture loop
    u8g2.firstPage();
    do {
      Serial.println(y);
      drawPerseverance();
      } while(u8g2.nextPage());
    delay(1000);
    u8g2.firstPage();
  
  //  do {
  //    drawSmallMars();
  //  } while(u8g2.nextPage());
  //  delay(50);
  //  u8g2.firstPage();
}
